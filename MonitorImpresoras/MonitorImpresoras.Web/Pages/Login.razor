@page "/login"
@inject AuthService AuthService
@inject TenantService TenantService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Iniciar Sesión - QOPIQ</PageTitle>

<div class="login-container">
    <div class="container-fluid">
        <div class="row min-vh-100">
            <!-- Panel izquierdo con branding -->
            <div class="col-lg-6 d-none d-lg-flex align-items-center justify-content-center bg-primary text-white">
                <div class="text-center">
                    <i class="fas fa-print" style="font-size: 5rem; margin-bottom: 2rem;"></i>
                    <h1 class="display-4 fw-bold mb-4">QOPIQ</h1>
                    <p class="lead mb-4">Sistema de Monitoreo de Impresoras</p>
                    <div class="row text-center">
                        <div class="col-4">
                            <i class="fas fa-chart-line fa-2x mb-2"></i>
                            <p class="small">Reportes Automáticos</p>
                        </div>
                        <div class="col-4">
                            <i class="fas fa-calendar-alt fa-2x mb-2"></i>
                            <p class="small">Programación Inteligente</p>
                        </div>
                        <div class="col-4">
                            <i class="fas fa-envelope fa-2x mb-2"></i>
                            <p class="small">Distribución por Email</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Panel derecho con formulario -->
            <div class="col-lg-6 d-flex align-items-center justify-content-center">
                <div class="w-100" style="max-width: 400px;">
                    <div class="card shadow-lg border-0">
                        <div class="card-body p-5">
                            <div class="text-center mb-4">
                                <i class="fas fa-print text-primary fa-3x mb-3"></i>
                                <h2 class="fw-bold">Iniciar Sesión</h2>
                                <p class="text-muted">Accede a tu cuenta QOPIQ</p>
                            </div>

                            @if (!string.IsNullOrEmpty(errorMessage))
                            {
                                <div class="alert alert-danger" role="alert">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    @errorMessage
                                </div>
                            }

                            <EditForm Model="@loginRequest" OnValidSubmit="@HandleLogin">
                                <DataAnnotationsValidator />

                                <!-- Selección de Tenant -->
                                <div class="mb-3">
                                    <label for="tenant" class="form-label">
                                        <i class="fas fa-building"></i> Empresa
                                    </label>
                                    <InputSelect @bind-Value="loginRequest.TenantId" class="form-select" id="tenant">
                                        <option value="">Selecciona tu empresa...</option>
                                        @foreach (var tenant in availableTenants)
                                        {
                                            <option value="@tenant.Id">@tenant.Name</option>
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="@(() => loginRequest.TenantId)" class="text-danger" />
                                </div>

                                <!-- Email -->
                                <div class="mb-3">
                                    <label for="email" class="form-label">
                                        <i class="fas fa-envelope"></i> Correo Electrónico
                                    </label>
                                    <InputText @bind-Value="loginRequest.Email" class="form-control" id="email" 
                                               placeholder="tu@email.com" autocomplete="username" />
                                    <ValidationMessage For="@(() => loginRequest.Email)" class="text-danger" />
                                </div>

                                <!-- Password -->
                                <div class="mb-4">
                                    <label for="password" class="form-label">
                                        <i class="fas fa-lock"></i> Contraseña
                                    </label>
                                    <div class="input-group">
                                        <InputText @bind-Value="loginRequest.Password" 
                                                   type="@(showPassword ? "text" : "password")" 
                                                   class="form-control" id="password" 
                                                   placeholder="Tu contraseña" 
                                                   autocomplete="current-password" />
                                        <button type="button" class="btn btn-outline-secondary" 
                                                @onclick="TogglePasswordVisibility">
                                            <i class="fas @(showPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                        </button>
                                    </div>
                                    <ValidationMessage For="@(() => loginRequest.Password)" class="text-danger" />
                                </div>

                                <!-- Submit Button -->
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary btn-lg" disabled="@isLoading">
                                        @if (isLoading)
                                        {
                                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                            <span>Iniciando sesión...</span>
                                        }
                                        else
                                        {
                                            <i class="fas fa-sign-in-alt me-2"></i>
                                            <span>Iniciar Sesión</span>
                                        }
                                    </button>
                                </div>
                            </EditForm>

                            <!-- Demo Credentials -->
                            <div class="mt-4 p-3 bg-light rounded">
                                <h6 class="text-muted mb-2">
                                    <i class="fas fa-info-circle"></i> Credenciales de Demostración
                                </h6>
                                <div class="row">
                                    <div class="col-6">
                                        <small class="text-muted">Admin:</small><br>
                                        <code class="small">admin@demo.com</code><br>
                                        <code class="small">Password123!</code>
                                    </div>
                                    <div class="col-6">
                                        <small class="text-muted">Usuario:</small><br>
                                        <code class="small">user@demo.com</code><br>
                                        <code class="small">Password123!</code>
                                    </div>
                                </div>
                                <button type="button" class="btn btn-sm btn-outline-primary mt-2" 
                                        @onclick="FillDemoCredentials">
                                    <i class="fas fa-magic"></i> Usar credenciales demo
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new();
    private List<TenantInfo> availableTenants = new();
    private string? errorMessage;
    private bool isLoading = false;
    private bool showPassword = false;

    protected override async Task OnInitializedAsync()
    {
        // Cargar tenants disponibles
        availableTenants = await TenantService.GetAvailableTenantsAsync();
        
        // Pre-seleccionar tenant demo si está disponible
        var demoTenant = availableTenants.FirstOrDefault(t => t.Id == "demo");
        if (demoTenant != null)
        {
            loginRequest.TenantId = demoTenant.Id;
        }
    }

    private async Task HandleLogin()
    {
        if (string.IsNullOrEmpty(loginRequest.TenantId))
        {
            errorMessage = "Por favor selecciona una empresa.";
            return;
        }

        isLoading = true;
        errorMessage = null;

        try
        {
            var result = await AuthService.LoginAsync(loginRequest);
            
            if (result.Success)
            {
                await JSRuntime.InvokeVoidAsync("showToast", "¡Bienvenido!", "Sesión iniciada correctamente", "success");
                Navigation.NavigateTo("/", true);
            }
            else
            {
                errorMessage = result.ErrorMessage ?? "Error desconocido al iniciar sesión.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error de conexión: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private void FillDemoCredentials()
    {
        loginRequest.TenantId = "demo";
        loginRequest.Email = "admin@demo.com";
        loginRequest.Password = "Password123!";
    }
}
