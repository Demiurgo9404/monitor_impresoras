name: Build & Deploy .NET App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release --no-restore

    - name: Run unit tests
      run: dotnet test --no-build --verbosity normal --configuration Release

    - name: Run integration tests
      run: dotnet test --no-build --verbosity normal --configuration Release --filter "Category=Integration"

    - name: Publish application
      run: dotnet publish MonitorImpresoras.API/MonitorImpresoras.API.csproj -c Release -o ./publish

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MonitorImpresoras-Release
        path: ./publish/
        retention-days: 7

    - name: Deploy to IIS
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: azure/webapps-deploy@v3
      with:
        app-name: "MonitorImpresoras"
        package: ./publish/
        publish-profile: ${{ secrets.IIS_PUBLISH_PROFILE }}

  security-scan:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run OWASP Dependency-Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'MonitorImpresoras'
        path: .
        format: 'ALL'

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: reports/

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Cypress dependencies
      working-directory: ./e2e-tests
      run: |
        npm init -y || true
        npm install cypress --save-dev

    - name: Run Cypress E2E (staging)
      working-directory: ./e2e-tests
      run: |
        npx cypress run --config baseUrl=https://staging.monitorimpresoras.com
      env:
        CYPRESS_adminEmail: admin@monitorimpresoras.com
        CYPRESS_adminPassword: Admin123!

    - name: Upload Cypress artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-artifacts
        path: |
          e2e-tests/cypress/videos/**
          e2e-tests/cypress/screenshots/**

  performance-test:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup k6
      uses: grafana/setup-k6-action@v1

    - name: Run k6 load test (staging)
      run: |
        k6 run load-tests/load-test.js --out json=load-test-results.json
      env:
        BASE_URL: https://staging.monitorimpresoras.com
        API_TOKEN: test_token

    - name: Upload load test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: load-test-results
        path: load-test-results.json
