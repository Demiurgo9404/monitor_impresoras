name: CI/CD MonitorImpresoras

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '9.0.x'
  BUILD_CONFIGURATION: 'Release'
  SOLUTION_FILE: 'MonitorImpresoras.sln'
  API_PROJECT: 'MonitorImpresoras.API/MonitorImpresoras.API.csproj'

jobs:
  # Job de construcción y pruebas
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

      - name: Run tests
        run: dotnet test --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.run_number }}
          path: |
            **/test-results.trx

      - name: Publish API
        run: dotnet publish ${{ env.API_PROJECT }} --configuration ${{ env.BUILD_CONFIGURATION }} --output ./publish --no-build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: monitor-impresoras-${{ github.run_number }}
          path: ./publish/
          retention-days: 30

  # Job de despliegue a producción (solo para main)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: monitor-impresoras-${{ github.run_number }}
          path: ./publish/

      - name: Setup .NET for deployment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Run database migrations
        run: |
          cd ./publish
          dotnet ef database update --context ApplicationDbContext --connection-string "${{ secrets.PRODUCTION_CONNECTION_STRING }}"
        continue-on-error: true

      - name: Deploy to IIS server
        run: |
          echo "Deploying to production IIS server..."
          # Aquí iría el comando de despliegue específico
          # Ejemplo con PowerShell remoto:
          # Invoke-Command -ComputerName ${{ secrets.PRODUCTION_HOST }} -Credential ${{ secrets.PRODUCTION_CREDENTIALS }} -ScriptBlock {
          #   robocopy C:\temp\publish C:\inetpub\MonitorImpresoras /MIR
          #   Import-Module WebAdministration
          #   Restart-WebAppPool "MonitorImpresorasPool"
          # }

      - name: Health check production
        run: |
          echo "Performing health check on production..."
          # curl -f ${{ secrets.PRODUCTION_URL }}/api/v1/health || exit 1

      - name: Notify deployment success
        run: |
          echo "Deployment to production completed successfully"
          # Aquí podrías enviar notificaciones a Slack, Teams, etc.

  # Job de análisis de seguridad (opcional)
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security scan
        run: |
          echo "Running security scan..."
          # Aquí podrías integrar herramientas como:
          # - OWASP ZAP
          # - Snyk
          # - SonarQube
          # - Trivy para vulnerabilidades

      - name: Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report-${{ github.run_number }}
          path: ./security-report/
          retention-days: 90
