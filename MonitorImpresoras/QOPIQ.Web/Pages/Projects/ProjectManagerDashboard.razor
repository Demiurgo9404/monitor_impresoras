@page "/projects/dashboard"
@inject ApiService ApiService
@inject TenantService TenantService
@inject IJSRuntime JSRuntime
@attribute [Authorize(Roles = "ProjectManager")]

<PageTitle>Project Manager Dashboard - QOPIQ</PageTitle>

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-0 text-gradient">
                        <i class="fas fa-tasks text-success me-2"></i>
                        Dashboard de Proyectos
                    </h1>
                    <p class="text-muted mb-0">Gesti√≥n de proyectos asignados y reportes</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-primary btn-modern" @onclick="RefreshData">
                        <i class="fas fa-sync-alt @(isLoading ? "fa-spin" : "")"></i>
                        Actualizar
                    </button>
                    <button class="btn btn-success btn-modern" @onclick="GenerateProjectReport">
                        <i class="fas fa-chart-bar me-1"></i>
                        Reporte General
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Project Stats -->
    @if (projectStats != null)
    {
        <div class="row mb-4">
            <div class="col-xl-3 col-md-6 mb-3">
                <div class="card metric-card gradient-success">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="metric-icon success me-3">
                                <i class="fas fa-briefcase"></i>
                            </div>
                            <div class="flex-grow-1">
                                <div class="metric-value text-white">@projectStats.AssignedProjects</div>
                                <div class="metric-label text-white-50">Proyectos Asignados</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-md-6 mb-3">
                <div class="card metric-card gradient-primary">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="metric-icon primary me-3">
                                <i class="fas fa-print"></i>
                            </div>
                            <div class="flex-grow-1">
                                <div class="metric-value text-white">@projectStats.TotalPrinters</div>
                                <div class="metric-label text-white-50">Impresoras Gestionadas</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-md-6 mb-3">
                <div class="card metric-card gradient-info">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="metric-icon info me-3">
                                <i class="fas fa-file-alt"></i>
                            </div>
                            <div class="flex-grow-1">
                                <div class="metric-value text-white">@projectStats.MonthlyReports</div>
                                <div class="metric-label text-white-50">Reportes del Mes</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-md-6 mb-3">
                <div class="card metric-card gradient-warning">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="metric-icon warning me-3">
                                <i class="fas fa-exclamation-triangle"></i>
                            </div>
                            <div class="flex-grow-1">
                                <div class="metric-value text-white">@projectStats.PendingAlerts</div>
                                <div class="metric-label text-white-50">Alertas Pendientes</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <!-- Assigned Projects -->
        <div class="col-lg-8 mb-4">
            <div class="card shadow-custom">
                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-briefcase text-primary me-2"></i>
                        Mis Proyectos
                    </h5>
                    <div class="btn-group btn-group-sm" role="group">
                        <input type="radio" class="btn-check" name="projectView" id="cardView" autocomplete="off" checked @onchange="() => ChangeProjectView('card')">
                        <label class="btn btn-outline-primary" for="cardView">
                            <i class="fas fa-th-large"></i>
                        </label>
                        
                        <input type="radio" class="btn-check" name="projectView" id="listView" autocomplete="off" @onchange="() => ChangeProjectView('list')">
                        <label class="btn btn-outline-primary" for="listView">
                            <i class="fas fa-list"></i>
                        </label>
                    </div>
                </div>
                <div class="card-body">
                    @if (assignedProjects?.Any() == true)
                    {
                        @if (projectView == "card")
                        {
                            <div class="row g-3">
                                @foreach (var project in assignedProjects)
                                {
                                    <div class="col-md-6 col-xl-4">
                                        <div class="card project-card h-100 border-2 border-@GetProjectStatusColor(project.Status)">
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between align-items-start mb-2">
                                                    <h6 class="card-title mb-0">@project.Name</h6>
                                                    <span class="status-badge status-@project.Status.ToLower()">
                                                        @GetProjectStatusText(project.Status)
                                                    </span>
                                                </div>
                                                <p class="card-text text-muted small mb-3">@project.ClientName</p>
                                                
                                                <div class="project-progress mb-3">
                                                    <div class="d-flex justify-content-between mb-1">
                                                        <small class="text-muted">Progreso</small>
                                                        <small class="text-muted">@project.CompletionPercentage%</small>
                                                    </div>
                                                    <div class="progress" style="height: 6px;">
                                                        <div class="progress-bar bg-@GetProjectStatusColor(project.Status)" 
                                                             style="width: @project.CompletionPercentage%"></div>
                                                    </div>
                                                </div>

                                                <div class="project-metrics mb-3">
                                                    <div class="row text-center">
                                                        <div class="col-4">
                                                            <div class="metric-small">
                                                                <div class="metric-value">@project.PrinterCount</div>
                                                                <div class="metric-label">Impresoras</div>
                                                            </div>
                                                        </div>
                                                        <div class="col-4">
                                                            <div class="metric-small">
                                                                <div class="metric-value">@project.ReportCount</div>
                                                                <div class="metric-label">Reportes</div>
                                                            </div>
                                                        </div>
                                                        <div class="col-4">
                                                            <div class="metric-small">
                                                                <div class="metric-value">@project.AlertCount</div>
                                                                <div class="metric-label">Alertas</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="d-flex gap-1">
                                                    <button class="btn btn-sm btn-primary flex-fill" @onclick="() => ViewProjectDetails(project)">
                                                        <i class="fas fa-eye me-1"></i>
                                                        Ver
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-success" @onclick="() => GenerateProjectReport(project)">
                                                        <i class="fas fa-file-alt"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Proyecto</th>
                                            <th>Cliente</th>
                                            <th>Estado</th>
                                            <th>Progreso</th>
                                            <th>Impresoras</th>
                                            <th>Reportes</th>
                                            <th>Acciones</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var project in assignedProjects)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="fw-bold">@project.Name</div>
                                                    <small class="text-muted">@project.Description</small>
                                                </td>
                                                <td>@project.ClientName</td>
                                                <td>
                                                    <span class="status-badge status-@project.Status.ToLower()">
                                                        @GetProjectStatusText(project.Status)
                                                    </span>
                                                </td>
                                                <td>
                                                    <div class="progress" style="height: 6px; width: 80px;">
                                                        <div class="progress-bar bg-@GetProjectStatusColor(project.Status)" 
                                                             style="width: @project.CompletionPercentage%"></div>
                                                    </div>
                                                    <small class="text-muted">@project.CompletionPercentage%</small>
                                                </td>
                                                <td>
                                                    <span class="badge bg-info">@project.PrinterCount</span>
                                                </td>
                                                <td>
                                                    <span class="badge bg-primary">@project.ReportCount</span>
                                                </td>
                                                <td>
                                                    <div class="btn-group btn-group-sm">
                                                        <button class="btn btn-outline-primary" @onclick="() => ViewProjectDetails(project)">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button class="btn btn-outline-success" @onclick="() => GenerateProjectReport(project)">
                                                            <i class="fas fa-file-alt"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-briefcase fa-3x text-muted mb-3"></i>
                            <h5>No hay proyectos asignados</h5>
                            <p class="text-muted">Contacta con tu administrador para que te asigne proyectos.</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Quick Actions & Alerts -->
        <div class="col-lg-4 mb-4">
            <div class="card shadow-custom mb-4">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-bolt text-warning me-2"></i>
                        Acciones R√°pidas
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button class="btn btn-primary btn-modern" @onclick="GenerateProjectReport">
                            <i class="fas fa-chart-bar me-2"></i>
                            Reporte General
                        </button>
                        <button class="btn btn-success btn-modern" @onclick="ViewAllReports">
                            <i class="fas fa-file-alt me-2"></i>
                            Ver Reportes
                        </button>
                        <button class="btn btn-info btn-modern" @onclick="ViewScheduledReports">
                            <i class="fas fa-calendar me-2"></i>
                            Reportes Programados
                        </button>
                        <button class="btn btn-warning btn-modern" @onclick="ViewAlerts">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            Ver Alertas
                        </button>
                    </div>
                </div>
            </div>

            <div class="card shadow-custom">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-bell text-danger me-2"></i>
                        Alertas Recientes
                    </h5>
                </div>
                <div class="card-body">
                    @if (recentAlerts?.Any() == true)
                    {
                        <div class="alerts-list">
                            @foreach (var alert in recentAlerts.Take(5))
                            {
                                <div class="alert-item border-start border-@GetAlertColor(alert.Severity) border-3 ps-3 mb-3">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <div class="alert-title fw-bold">@alert.Title</div>
                                            <div class="alert-description text-muted small">@alert.Description</div>
                                            <div class="alert-project text-primary small">@alert.ProjectName</div>
                                        </div>
                                        <small class="text-muted">@alert.CreatedAt.ToString("HH:mm")</small>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="text-center">
                            <button class="btn btn-outline-danger btn-sm" @onclick="ViewAlerts">
                                Ver todas las alertas
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="fas fa-check-circle fa-2x text-success mb-2"></i>
                            <p class="text-muted small">No hay alertas pendientes</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Performance Charts -->
    <div class="row">
        <div class="col-lg-6 mb-4">
            <div class="card shadow-custom">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-line text-info me-2"></i>
                        Rendimiento de Proyectos
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="projectPerformanceChart" height="120"></canvas>
                </div>
            </div>
        </div>

        <div class="col-lg-6 mb-4">
            <div class="card shadow-custom">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-print text-primary me-2"></i>
                        Estado de Impresoras
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="printersStatusChart" height="120"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ProjectManagerStats? projectStats;
    private List<AssignedProject>? assignedProjects;
    private List<ProjectAlert>? recentAlerts;
    private bool isLoading = false;
    private string projectView = "card";

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && projectStats != null)
        {
            await RenderCharts();
        }
    }

    private async Task LoadData()
    {
        isLoading = true;
        StateHasChanged();

        try
        {
            var tasks = new[]
            {
                ApiService.GetAsync<ProjectManagerStats>("/api/projects/manager/stats"),
                ApiService.GetAsync<List<AssignedProject>>("/api/projects/assigned"),
                ApiService.GetAsync<List<ProjectAlert>>("/api/projects/alerts")
            };

            await Task.WhenAll(tasks);

            projectStats = await tasks[0];
            assignedProjects = await tasks[1];
            recentAlerts = await tasks[2];
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("showToast", "Error", $"Error cargando datos: {ex.Message}", "error");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task RefreshData()
    {
        await LoadData();
        await JSRuntime.InvokeVoidAsync("showToast", "Actualizado", "Datos actualizados correctamente", "success");
    }

    private void ChangeProjectView(string view)
    {
        projectView = view;
        StateHasChanged();
    }

    private async Task ViewProjectDetails(AssignedProject project)
    {
        await JSRuntime.InvokeVoidAsync("eval", $"window.location.href = '/projects/{project.Id}'");
    }

    private async Task GenerateProjectReport(AssignedProject? project = null)
    {
        var projectName = project?.Name ?? "todos los proyectos";
        await JSRuntime.InvokeVoidAsync("showToast", "Generando", $"Generando reporte para {projectName}...", "info");
    }

    private async Task ViewAllReports()
    {
        await JSRuntime.InvokeVoidAsync("eval", "window.location.href = '/reports'");
    }

    private async Task ViewScheduledReports()
    {
        await JSRuntime.InvokeVoidAsync("eval", "window.location.href = '/scheduled-reports'");
    }

    private async Task ViewAlerts()
    {
        await JSRuntime.InvokeVoidAsync("eval", "window.location.href = '/projects/alerts'");
    }

    private async Task RenderCharts()
    {
        // Project Performance Chart
        var performanceData = new
        {
            labels = assignedProjects?.Select(p => p.Name).ToArray() ?? new string[0],
            datasets = new[]
            {
                new
                {
                    label = "Progreso (%)",
                    data = assignedProjects?.Select(p => p.CompletionPercentage).ToArray() ?? new int[0],
                    backgroundColor = "rgba(40, 167, 69, 0.8)",
                    borderColor = "rgba(40, 167, 69, 1)",
                    borderWidth = 1
                }
            }
        };

        await JSRuntime.InvokeVoidAsync("renderChart", "projectPerformanceChart", "bar", performanceData);

        // Printers Status Chart
        var statusData = new
        {
            labels = new[] { "Operativas", "Con Alertas", "Fuera de L√≠nea" },
            datasets = new[]
            {
                new
                {
                    data = new[] { 85, 10, 5 },
                    backgroundColor = new[] { "#28a745", "#ffc107", "#dc3545" },
                    borderWidth = 0
                }
            }
        };

        await JSRuntime.InvokeVoidAsync("renderChart", "printersStatusChart", "doughnut", statusData);
    }

    private string GetProjectStatusColor(string status)
    {
        return status switch
        {
            "Active" => "success",
            "InProgress" => "primary",
            "OnHold" => "warning",
            "Completed" => "info",
            "Cancelled" => "danger",
            _ => "secondary"
        };
    }

    private string GetProjectStatusText(string status)
    {
        return status switch
        {
            "Active" => "Activo",
            "InProgress" => "En Progreso",
            "OnHold" => "En Pausa",
            "Completed" => "Completado",
            "Cancelled" => "Cancelado",
            _ => status
        };
    }

    private string GetAlertColor(string severity)
    {
        return severity switch
        {
            "Critical" => "danger",
            "High" => "warning",
            "Medium" => "info",
            "Low" => "success",
            _ => "secondary"
        };
    }

    // Models
    public class ProjectManagerStats
    {
        public int AssignedProjects { get; set; }
        public int TotalPrinters { get; set; }
        public int MonthlyReports { get; set; }
        public int PendingAlerts { get; set; }
    }

    public class AssignedProject
    {
        public Guid Id { get; set; }
        public string Name { get; set; } = "";
        public string Description { get; set; } = "";
        public string ClientName { get; set; } = "";
        public string Status { get; set; } = "";
        public int CompletionPercentage { get; set; }
        public int PrinterCount { get; set; }
        public int ReportCount { get; set; }
        public int AlertCount { get; set; }
    }

    public class ProjectAlert
    {
        public Guid Id { get; set; }
        public string Title { get; set; } = "";
        public string Description { get; set; } = "";
        public string Severity { get; set; } = "";
        public string ProjectName { get; set; } = "";
        public DateTime CreatedAt { get; set; }
    }
}

