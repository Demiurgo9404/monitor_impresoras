-- Script SQL para crear las tablas básicas de MonitorImpresoras
-- Ejecutar en PostgreSQL 17 en la base de datos PrintHubDB

-- Crear tabla Printers
CREATE TABLE IF NOT EXISTS "Printers" (
    "Id" uuid NOT NULL PRIMARY KEY,
    "Name" varchar(255) NOT NULL,
    "Model" varchar(255) NOT NULL,
    "SerialNumber" varchar(255) NOT NULL,
    "IpAddress" varchar(255) NOT NULL,
    "Location" varchar(255) NOT NULL,
    "Description" varchar(255) NOT NULL,
    "IsActive" boolean NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);

-- Crear tabla Alerts
CREATE TABLE IF NOT EXISTS "Alerts" (
    "Id" uuid NOT NULL PRIMARY KEY,
    "TenantId" uuid NOT NULL,
    "EntityId" uuid NOT NULL,
    "PrinterId" integer,
    "Description" varchar(1000) NOT NULL,
    "Type" integer NOT NULL,
    "Severity" integer NOT NULL,
    "Status" integer NOT NULL,
    "IsAutoGenerated" boolean NOT NULL,
    "Source" varchar(255),
    "ResolutionNotes" text,
    "ResolvedAt" timestamp with time zone,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL,
    "DetectedAt" timestamp with time zone NOT NULL
);

-- Crear tabla PrinterCounters
CREATE TABLE IF NOT EXISTS "PrinterCounters" (
    "Id" uuid NOT NULL PRIMARY KEY,
    "PrinterId" integer NOT NULL,
    "TotalPagesPrinted" bigint NOT NULL,
    "BlackAndWhitePages" bigint NOT NULL,
    "ColorPages" bigint NOT NULL,
    "TotalJobs" integer NOT NULL,
    "LastResetDate" timestamp with time zone,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);

-- Crear tabla Users
CREATE TABLE IF NOT EXISTS "Users" (
    "Id" uuid NOT NULL PRIMARY KEY,
    "UserName" varchar(255) NOT NULL,
    "Email" varchar(255) NOT NULL,
    "FirstName" varchar(255),
    "LastName" varchar(255),
    "IsActive" boolean NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);

-- Crear tabla Roles
CREATE TABLE IF NOT EXISTS "Roles" (
    "Id" uuid NOT NULL PRIMARY KEY,
    "Name" varchar(255) NOT NULL,
    "Description" varchar(255),
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);

-- Crear tabla UserRoles (relación muchos a muchos)
CREATE TABLE IF NOT EXISTS "UserRoles" (
    "UserId" uuid NOT NULL,
    "RoleId" uuid NOT NULL,
    PRIMARY KEY ("UserId", "RoleId"),
    FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE,
    FOREIGN KEY ("RoleId") REFERENCES "Roles" ("Id") ON DELETE CASCADE
);

-- Crear índices para mejorar el rendimiento
CREATE INDEX IF NOT EXISTS "IX_Alerts_PrinterId" ON "Alerts" ("PrinterId");
CREATE INDEX IF NOT EXISTS "IX_Alerts_Status" ON "Alerts" ("Status");
CREATE INDEX IF NOT EXISTS "IX_Alerts_Type" ON "Alerts" ("Type");
CREATE INDEX IF NOT EXISTS "IX_PrinterCounters_PrinterId" ON "PrinterCounters" ("PrinterId");
CREATE INDEX IF NOT EXISTS "IX_Users_Email" ON "Users" ("Email");
CREATE INDEX IF NOT EXISTS "IX_Users_UserName" ON "Users" ("UserName");

-- Insertar datos de prueba
INSERT INTO "Roles" ("Id", "Name", "Description", "CreatedAt", "UpdatedAt")
VALUES
    (gen_random_uuid(), 'Admin', 'Administrador del sistema', NOW(), NOW()),
    (gen_random_uuid(), 'User', 'Usuario estándar', NOW(), NOW())
ON CONFLICT ("Name") DO NOTHING;

-- Insertar usuario de prueba
INSERT INTO "Users" ("Id", "UserName", "Email", "FirstName", "LastName", "IsActive", "CreatedAt", "UpdatedAt")
VALUES
    (gen_random_uuid(), 'admin', 'admin@printhub.com', 'Admin', 'System', true, NOW(), NOW())
ON CONFLICT ("UserName") DO NOTHING;

-- Asignar rol de admin al usuario admin
INSERT INTO "UserRoles" ("UserId", "RoleId")
SELECT u."Id", r."Id"
FROM "Users" u, "Roles" r
WHERE u."UserName" = 'admin' AND r."Name" = 'Admin'
ON CONFLICT ("UserId", "RoleId") DO NOTHING;
